#!/bin/bash
#
# redeploy script
# is run by cronjob each night on qa0
# can also be run at any time to redeploy
#

PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games

# reduced verboseness of puppet and npm...
MYPUPPETOPTIONS='--onetime --no-daemonize --verbose'
MYNPMOPTIONS='--loglevel warn'
# ...unless debug...
if [ "Z$ARG[1]" == "Z--debug" -o "Z$ARG[1]" == "Z-d" -o ! -z "$DEBUG" ]
then
    MYPUPPETOPTIONS=-t
    MYNPMOPTIONS=
fi

# ensure we're initially not somewhere that's going to be removed
mycwd=$(pwd)
cd /

echo
echo "Re-deploying $HOSTNAME: $(date)"
echo "========================================================="
echo


# Simple requirement check
if [ ! -d "<%= model_loader_dir %>" ] ; then
    echo "The model loader was not found. Exitting"
    exit 1
elif [ ! -f "<%= model_loader_dir %>/scripts/users/0.txt" ] ; then
    echo "There was no batch found in the model loader."
    echo "You can generate a batch with:"
    echo "cd <%= model_loader_dir %> && node generate.js -b 1 -t oae -u 200 -g 400 -c 1000 -d 200 -f 200"
    exit 1
fi


echo "Shutting down services..."
<%= scripts_dir %>/shutdown.sh

echo
echo "Deleting data..."
<%= scripts_dir %>/deletedata.sh

echo
echo "Restoring services with puppet"
puppet agent --onetime --no-daemonize --verbose

echo
echo "Performing production build (this will take a little while)"

service hilary stop

cd <%= ux_root_dir %>
npm install -g grunt-cli --loglevel warn

# so...in theory a tarball release can be handled by the puppet run earlier
# however if we like to use the master branch by default in qa0
if [ "Z<%= ux_install_method %>" == "Zarchive" ]
then # tarball install

    # reset config.ui path
    # I suspect that the ux files jiggle around could be done to resolve this instead but this seems to work so far
    sed -i "s/'path': '\/opt\/3akai-ux'/'path': '\/opt\/3akai-ux\/optimized'/" /opt/oae/config.js

else # git master install

    npm install -d --loglevel warn

    # Only cdnify QA0
    if [ "<%= web_domain %>" == "oae-qa0.oaeproject.org" ] ; then
        CDN_URL="https://qa0-researchresearch-researchresearch.netdna-ssl.com" grunt
    else
        grunt
    fi

    # jiggle arround the ux files until they're all in the right place
    rm -rf /tmp/target
    mv target /tmp
    cd /
    rm -rf <%= ux_root_dir %>
    mv /tmp/target/optimized <%= ux_root_dir %>
    rm -rf <%= ux_root_dir %>/../original
    mv /tmp/target/original <%= ux_root_dir %>/../original
    cd <%= ux_root_dir %>
fi

service hilary start

DELAY=60
echo
echo "Sleeping ${DELAY}s to let the app server start up"
sleep $DELAY

# Restarting nginx so it finds the app server up quicker
service nginx restart

cd <%= scripts_dir %>

echo
echo "Updating oaesh"
npm install -g oaesh --loglevel warn

# Create an 'oae' tenant.
echo
echo "Creating an 'oae' tenant and disabling reCaptcha"
oaesh -i -U https://<%= admin_host %> -u administrator -p administrator -- \
    exec /api/tenant/create -d "alias=oae" -d "displayName=Open Academic Environment" -d "host=oae.<%= web_domain %>"

# Disable reCaptcha
oaesh -i -U https://<%= admin_host %> -u administrator -p administrator -- \
    config-set -k "oae-principals/recaptcha/enabled=false"

if [[ "<%= flickr_api_key %>" != "unset" ]] ; then
    # Configuring the Flickr and SlideShare Preview Processor
    oaesh -i -U https://<%= admin_host %> -u administrator -p administrator -- \
        config-set \
            -k "oae-preview-processor/flickr/apikey=<%=flickr_api_key %>" \
            -k "oae-preview-processor/flickr/apisecret=<%=flickr_api_secret %>" \
            -k "oae-preview-processor/slideshare/sharedsecret=<%=slideshare_shared_secret %>" \
            -k "oae-preview-processor/slideshare/apikey=<%= slideshare_api_key %>"
fi

# Performing a data load. An initial set of scripts should already be present on the server (requires
# manual intervention)
echo
echo "Loading data via the model loader"
cd <%= model_loader_dir %>
node loaddata.js -b 1 -s 0 -h https://oae.<%= web_domain %>

# go back to where the script was run from
cd $mycwd

